<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.p2p.dao.ForwardInfoDao">
    <!--通过session获取用户信息-->
    <select id="getSesInfo" resultType="map">
        select * from TB_FWDINFO where USERID = #{userId}
    </select>
    <!--修改支付密码-->
    <update id="changePayPsw" parameterType="map">
        update TB_FWDINFO set USERPAYPSW = #{chgData} where USERID = #{userId}
    </update>
    <!--修改登录密码-->
    <update id="changeLogPsw" parameterType="map">
        update TB_FWDLOGIN set USERPSW = #{chgData} where USERID = #{userId}
    </update>
    <!--修改电话号码-->
    <update id="changeTel" parameterType="map">
        update TB_FWDLOGIN set USERTEL = #{chgData} where USERID = #{userId}
    </update>
    <!--修改银行卡号-->
    <update id="changeBankNum" parameterType="map">
        update TB_FWDINFO set USERBANKNUM = #{chgData} where USERID = #{userId}
    </update>
    <!--修改邮箱-->
    <update id="changeEmail" parameterType="map">
        update TB_FWDINFO set USEREMAIL = #{chgData} where USERID = #{userId}
    </update>
    <!--获取用户状态-->
    <select id="getStation" resultType="int">
        select USEREXIST from TB_FWDLOGIN where USERID = #{userId}
    </select>
    <!--获取省份-->
    <select id="getProvince" resultType="map">
        select * from PROVINCE
    </select>
    <!--获取城市-->
    <select id="getCity" resultType="map">
        select * from CITY where PID = #{pid}
    </select>
    <!--获取地区-->
    <select id="getArea" resultType="map">
        select * from AREA where CID = #{cid}
    </select>
    <!--省份名-->
    <select id="getPro" resultType="String">
        select PNAME from PROVINCE where PID = #{theProvince}
    </select>
    <!--城市名-->
    <select id="getCty" resultType="String">
        select CNAME from CITY where CID = #{theCity}
    </select>
    <!--地区名-->
    <select id="getAra" resultType="String">
        select ANAME from AREA where AID = #{theArea}
    </select>
    <!--删除旧审核信息-->
    <delete id="delOld" parameterType="map">
        delete from TB_USERREAL where USERID = #{userId}
    </delete>
    <!--提交实名认证-->
    <insert id="subReal" parameterType="map">
        insert into TB_USERREAL (id,userid,realname,sex,address,idnumber,academic,housed,marriage,income,IDIMAGEFOUNTVAR,IDIMAGEBACKVAR,AUDITRESULT)
        values (TB_USERREAL_ID.nextval,#{userId},#{realName},#{sex},#{address},#{idNumber},#{academic},#{housed},#{marriage},#{income},#{forwardPic},#{backPic},'未审核')
    </insert>
    <!--修改状态-->
    <update id="chgExist" parameterType="map">
        update TB_FWDLOGIN set USEREXIST = 3 where USERID = #{userId}
    </update>
    <!--获取审核状态-->
    <select id="getChkSta" resultType="map">
        select AUDITRESULT,AUDITREMARKS from TB_USERREAL where USERID = #{userId}
    </select>
    <!--修改状态-->
    <update id="chgExistTwo" parameterType="map">
        update TB_FWDLOGIN set USEREXIST = 4 where USERID = #{userId}
    </update>
    <!--提交视频预约-->
    <insert id="subVideo" parameterType="map">
        insert into TB_VIDEO_AUDIT (ID,USERID,APPOINTMENTTIME,AUDITRESULT) values
        (TB_VIDEO_AUDIT_ID.nextval,#{userId},#{appointmentTime},'未审核')
    </insert>
    <!--获取视频审核状态-->
    <select id="getVidSta" resultType="map">
        select AUDITRESULT,APPOINTMENTTIME from TB_VIDEO_AUDIT where USERID = #{userId}
    </select>
    <!--获取账户余额和应还资金总额-->
    <select id="getFstCount" resultType="map">
        select AVAILABLEBALANCE,BIDAMOUNT from TB_BIDINFO a inner join tb_account b on(a.userid=b.userid) where a.userid=#{userId}
    </select>
    <!--获取还款计划-->
    <select id="getRepayCount" resultType="map">
        select b.bidrepaynumber fst, b.bidrepayamount||'元' snd, a.bidrate||'%' thr, to_char(b.bidrepaydeaddate,'yyyy-MM-dd') fur ,a.ID BID,a.USERID userid,b.BIDREPAYSTATE
        from TB_BIDINFO a
        inner join TB_BID_REPAY_INFO b
        on (a.userid=b.bidrepayuserid)
        where (a.bidstate = '满标二审通过' or a.bidstate = '还款中') and userid = #{userId}
    </select>
    <!--开户-->
    <insert id="insertAccount">
        insert into TB_ACCOUNT values (
        TB_ACCOUNT_ID.nextval,
        #{userId},
        0,
        0,
        0,
        0,
        50000,
        50000,
        #{chgData}
        )
    </insert>
</mapper>